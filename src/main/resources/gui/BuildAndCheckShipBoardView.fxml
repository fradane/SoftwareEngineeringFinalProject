<?xml version="1.0" encoding="UTF-8"?>

<?import java.lang.*?>
<?import java.net.*?>
<?import javafx.collections.*?>
<?import javafx.geometry.*?>
<?import javafx.scene.control.*?>
<?import javafx.scene.image.*?>
<?import javafx.scene.layout.*?>

<BorderPane fx:id="borderPane" minWidth="-Infinity" prefHeight="700.0" prefWidth="1200.0" styleClass="game-background" xmlns="http://javafx.com/javafx/17.0.12" xmlns:fx="http://javafx.com/fxml/1" fx:controller="it.polimi.ingsw.is25am33.client.view.gui.viewControllers.BuildAndCheckShipBoardController">
    <stylesheets>
        <URL value="@/galaxy-truckers.css" />
    </stylesheets>

    <top>
        <VBox spacing="10.0" styleClass="top-container">
            <HBox alignment="CENTER_RIGHT" spacing="10">
                <Label styleClass="screen-title" text="Galaxy Truckers" />
                <Region HBox.hgrow="ALWAYS" />
                <!-- VBox per impilare i bottoni con larghezza uniforme -->
                <VBox alignment="CENTER_RIGHT" minWidth="120" spacing="5">
                    <Button fx:id="goBackButton" maxWidth="120" onAction="#handleGoBackButton" prefWidth="120" styleClass="nav-button" text="Go Back" visible="false" />
                    <Button fx:id="exitGameButton" maxWidth="120" onAction="#handleExitGame" prefWidth="120" styleClass="menu-button-secondary" text="EXIT GAME" />
                </VBox>
            </HBox>

            <VBox alignment="CENTER_LEFT" spacing="5" styleClass="timer-container">
                <HBox>
                    <Label fx:id="timerLabel" styleClass="timer-label" />
                    <Button fx:id="flipHourglassButton" minHeight="-Infinity" minWidth="-Infinity" onAction="#handleFlipHourglassButton" styleClass="action-button" text="Flip Hourglass" />

                    <HBox alignment="CENTER" HBox.hgrow="ALWAYS">
                        <Label fx:id="messageLabel" alignment="CENTER" contentDisplay="CENTER" styleClass="timer-label" />
                    </HBox>
                </HBox>

                <Label fx:id="flipsLeftLabel" styleClass="timer-label" />
                <VBox.margin>
                    <Insets left="20.0" />
                </VBox.margin>
            </VBox>
        </VBox>
    </top>

    <left>
        <!-- Left panel for visible components -->
        <VBox fx:id="visibleComponentsPanel" maxWidth="300" minWidth="250" styleClass="visible-components-panel">
            <HBox alignment="CENTER" spacing="10.0" styleClass="component-controls"> </HBox>

            <ScrollPane fx:id="componentsScrollPane" fitToWidth="true" styleClass="component-controls" VBox.vgrow="ALWAYS">
                <VBox fx:id="componentsContainer" alignment="TOP_CENTER" styleClass="component-controls">
                    <padding>
                        <Insets bottom="10.0" left="10.0" right="10.0" top="10.0" />
                    </padding>
                    <!-- Visible components will be added here dynamically -->
                </VBox>
            </ScrollPane>
        </VBox>
    </left>

    <center>
        <StackPane fx:id="centerStackPane">
            <!-- Dynamically insert shipboards and flying boards -->

            <!-- Prefab Ships Menu - topmost element of the stack -->
            <VBox fx:id="prefabShipsMenu" alignment="CENTER" managed="false" styleClass="little-deck-container" visible="false" StackPane.alignment="CENTER">
                <Label styleClass="controls-title" text="Choose a Prefab Ship">
                    <VBox.margin>
                        <Insets bottom="20.0" />
                    </VBox.margin>
                </Label>

                <ScrollPane fitToWidth="true" prefHeight="400.0" prefWidth="600.0" styleClass="component-controls">
                    <VBox fx:id="prefabShipsContainer" alignment="TOP_CENTER" spacing="10.0" styleClass="component-controls">
                        <padding>
                            <Insets bottom="20.0" left="20.0" right="20.0" top="20.0" />
                        </padding>
                        <!-- Prefabricated ships will be added here dynamically -->
                    </VBox>
                </ScrollPane>

                <HBox alignment="CENTER" spacing="20.0">
                    <Button fx:id="cancelPrefabSelectionButton" onAction="#handleCancelPrefabSelection" styleClass="action-button" text="Cancel" />
                    <VBox.margin>
                        <Insets top="20.0" />
                    </VBox.margin>
                </HBox>

                <padding>
                    <Insets bottom="30.0" left="30.0" right="30.0" top="30.0" />
                </padding>
            </VBox>

            <!-- Little Deck Panel -->
            <FlowPane fx:id="littleDeckFlowPane" alignment="CENTER" hgap="20.0" managed="false" styleClass="little-deck-container" vgap="20.0" visible="false" StackPane.alignment="CENTER">
                <ImageView fx:id="visibleCard1" fitWidth="200" preserveRatio="true">
                    <FlowPane.margin>
                        <Insets bottom="25.0" left="25.0" right="25.0" top="25.0" />
                    </FlowPane.margin>
                </ImageView>
                <ImageView fx:id="visibleCard2" fitWidth="200" preserveRatio="true">
                    <FlowPane.margin>
                        <Insets bottom="25.0" left="25.0" right="25.0" top="25.0" />
                    </FlowPane.margin>
                </ImageView>
                <ImageView fx:id="visibleCard3" fitWidth="200" preserveRatio="true">
                    <FlowPane.margin>
                        <Insets bottom="25.0" left="25.0" right="25.0" top="25.0" />
                    </FlowPane.margin>
                </ImageView>
                <padding>
                    <Insets bottom="30.0" left="30.0" right="30.0" top="30.0" />
                </padding>
            </FlowPane>

            <StackPane fx:id="pawnButtonPane" managed="false" styleClass="little-deck-container" visible="false">
                <Button fx:id="placePawnButton" onAction="#handlePlacePawnButton" prefHeight="100.0" prefWidth="600.0" style="-fx-font-size: 18pt;" styleClass="place-pawn-button" text="Press the button to place your pawn, FAST!!!" visible="false" StackPane.alignment="CENTER" />
            </StackPane>

        </StackPane>
    </center>

    <right>
        <!-- Right panel with component and controls -->
        <VBox fx:id="componentsBoxV" maxWidth="350" minWidth="300" spacing="20.0">
            <!-- Component controls panel -->
            <VBox fx:id="componentControlsPanel" alignment="CENTER"  spacing="20.0" styleClass="component-controls"  visible="false" managed="false">

                <Button fx:id="rotateComponentButton" onAction="#handleRotateComponentButton" styleClass="component-control-button" text="Rotate Component" />
                <Button fx:id="releaseComponentButton" onAction="#handleReleaseComponentButton" styleClass="component-control-button" text="Release Component" />

                <padding>
                    <Insets bottom="20.0" left="20.0" right="20.0" top="20.0" />
                </padding>
            </VBox>

            <!-- Box componente -->
            <HBox fx:id="componentsBoxH" alignment="CENTER" spacing="30.0" styleClass="component-display">
                <ImageView fx:id="focusComponentImage" />
                <padding>
                    <Insets bottom="20.0" left="20.0" right="20.0" top="20.0" />
                </padding>
            </HBox>
        </VBox>
    </right>

    <bottom>
        <HBox fx:id="bottomBox" maxHeight="95.0" minHeight="140" prefHeight="150.0" prefWidth="993.0" styleClass="action-bar">
            <!-- Spacer sinistro con larghezza fissa -->
            <Region prefWidth="200.0">
            <padding>
               <Insets bottom="50.0" />
            </padding></Region>

            <!-- Center container for main buttons -->
            <HBox alignment="CENTER" spacing="15.0" HBox.hgrow="ALWAYS">
                <Button fx:id="pickRandomComponentButton" onAction="#handlePickRandomComponentButton" styleClass="action-button" text="Random Component" />
                <Button fx:id="prefabShipBoardButton" onAction="#handleGenerateShipBoardButton" styleClass="action-button" text="Load a prebuilt ship board" />
                <Button fx:id="confirmCrewMemberButton" managed="false" onAction="#handleConfirmCrewMemberButton" styleClass="action-button" text="CONFIRM" visible="false" />

                <ComboBox fx:id="littleDeckComboBox" onAction="#handleLittleDeck" promptText="Watch a little deck" styleClass="game-combo-box">
                    <items>
                        <FXCollections fx:factory="observableArrayList">
                            <Integer fx:value="1" />
                            <Integer fx:value="2" />
                            <Integer fx:value="3" />
                        </FXCollections>
                    </items>
                </ComboBox>
            </HBox>

            <!-- Right container for End Phase button with fixed width -->
            <HBox alignment="CENTER_RIGHT" prefWidth="200.0">
                <Button fx:id="endPhaseButton" onAction="#handleEndPhaseButton" styleClass="end-phase-button" text="End ship building phase" />
            </HBox>

            <padding>
                <Insets bottom="70.0" left="20.0" right="20.0" top="20.0" />
            </padding>
        </HBox>
    </bottom>
</BorderPane>